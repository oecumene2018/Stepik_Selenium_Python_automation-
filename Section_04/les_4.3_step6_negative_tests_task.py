# ЗАДАНИЕ: ОТРИЦАТЕЛЬНЫЕ ПРОВЕРКИ
#
# Добавьте к себе в проект функции из предыдущего шага и реализуйте несколько простых тестов:
#
# test_guest_cant_see_success_message_after_adding_product_to_basket:
# 1. Открываем страницу товара
# 2. Добавляем товар в корзину
# 3. Проверяем, что нет сообщения об успехе с помощью is_not_element_present

# test_guest_cant_see_success_message:
# 1. Открываем страницу товара
# 2. Проверяем, что нет сообщения об успехе с помощью is_not_element_present
#
#
# test_message_disappeared_after_adding_product_to_basket:
# 1. Открываем страницу товара
# 2. Добавляем товар в корзину
# Проверяем, что нет сообщения об успехе с помощью is_disappeared

# Запустите все три теста, и отметьте ниже верные утверждения для каждого теста.
#
# Важно! После того как пройдете это задание, те тесты, которые упали пометьте как XFail или skip, как это сделать
# мы разбирали в модуле 3: XFail: помечать тест как ожидаемо падающий.

# Несколько замечаний:
#
# 1. Убедитесь, что у вас отключены неявные ожидания (например, в конструкторе класса BasePage и /
# или в фикстуре в conftest.py).
#
# 2. Лучше выбирать товар без промо-акции, например:
# http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/

# Ответ на задание я натыкал интуитивно, но это не дело, и раз надо сделать, значит надо.
#
# Для того, чтобы пройти это задание, я временно закомментировал тест из предыдущих шагов и выполнял последовательно
# действия, указанные в задании, с какими проблемами я столкнулся:
#
# вне номеров%) - ссылка любая, подойдет, например из списка, который любезно предоставили в предыдущем шаге
#
# 1. В классе BasePage лучше закомментить #SELF.BROWSER.IMPLICITLY_WAIT(TIMEOUT) это необходимо, чтобы корректно
# отрабатывали индивидуальные методы WebDriverWait -> until и WebDriverWait -> until_not
#
# 2. В класс ProductPage добавляются два метода, один из них - should_not_be_success_message(см. задание) проверяет
# отсутствие сообщения об успехе на странице на данный момент. Второй - should_dissapear_of_success_message (делать
# самостоятельно, но отличие от первого - мизерное), проверяет, что сообщение исчезает. (Здесь очень внимательно, если
# оказаться на странице, где этого сообщения об успехе нет и не было, то такой тест будет успешно пройден)
#
# 3.  Корректно подбираем селектор для поиска сообщения об успехе, можно с помощью time.sleep(60), например, пройти
# самый первый тест этого модуля с добавлением товара, и сохранить страницу, чтобы спокойно вытянуть корректный путь.
#
# P.S. Ради интереса посмотрел, первое задание этого курса решили более 6к человек на текущий момент, а данное
# - чуть более 600 человек. Желаю удачи всем!